@model IEnumerable<Client>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function confirmarEliminar(id) {
            Swal.fire({
                title: '¿Estás seguro?',
                text: "No podrás revertir esta acción",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/Client/Delete/' + id;
                }
            });
        }

    </script>
    <script>
        async function editarCliente(id) {
            try {
                const response = await fetch(`/Client/GetById/${id}`);
                if (!response.ok) {
                    Swal.fire('Error', 'No se pudo obtener el cliente', 'error');
                    return;
                }

                const client = await response.json();
    Swal.fire({
        title: 'Editar libro',
        html: `
            <div class="mt-3 d-flex flex-column">
                <label for="">Nombre</label>
                <input type="text" id="Name" class="form-control" placeholder="Nombre del libro" value="${client.name}">
            </div>
            <div class="mt-3 d-flex flex-column">
                <label for="">Documento</label>
                <input type="text" id="Document" class="form-control" placeholder="Documento" value="${client.document}">
            </div>
            <div class="mt-3 d-flex flex-column">
                <label for="">Email</label>
                <input type="text" id="Email" class="form-control" placeholder="Email" value="${client.email}">
            </div>
            <div class="mt-3 d-flex flex-column">
                <label for="">Telefono</label>
                <input type="text" id="Phone" class="form-control" placeholder="Telefono" value="${client.phone}">
            </div>
        `,
        showCancelButton: true,
        confirmButtonText: 'Guardar',
        cancelButtonText: 'Cancelar',
        focusConfirm: false,
        preConfirm: () => {
            const Name = document.getElementById('Name').value.trim();
            const Document = document.getElementById('Document').value.trim();
            const Email = document.getElementById('Email').value.trim();
            const Phone = document.getElementById('Phone').value.trim();

            
            if (!Name || !Document || !Email || !Phone) {
                Swal.showValidationMessage('Por favor completa todos los campos');
                return false;
            }

            return { Name, Document, Email, Phone };
        }
    }).then(async (result) => {
        if (result.isConfirmed) {
            const updatedClient = {
                Id: id,
                Name: result.value.Name,
                Document: result.value.Document,
                Email: result.value.Email,
                Phone: result.value.Phone
            };
            
            if (result.isConfirmed) {
                const res = await fetch(`/Client/Update`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(updatedClient)
                });
                const data = await res.json();

                if (data.success) {
                    Swal.fire('Éxito', data.message, 'success').then(() => location.reload());
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            }

            
        }
        })}catch (error) {
            console.error(error);
            Swal.fire('Error', 'Ocurrió un error al editar el cliente.', 'error');
        }}
        
    
</script>
    <script>
        @if (TempData["DeleteSuccess"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'success',
                    title: '¡Hecho!',
                    text: '@TempData["DeleteSuccess"]'
                });
            </text>
        } else if (TempData["DeleteError"] != null)
        {
            <text>
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: '@TempData["DeleteError"]'
                });
            </text>
        } else if (TempData["CreateSuccess"] != null)
        {
            <text>
                Swal.fire({
                    icon : 'success',
                    title : 'Exito!',
                    text : '@TempData["CreateSuccess"]'
                })
            </text>
        }else if (TempData["CreateError"] != null)
        {
            <text>
                Swal.fire({
                    icon : 'error',
                    title : 'Error',
                    text : '@TempData["CreateError"]'
                })
            </text>
        }
    </script>
}


<h1>Lista de libros</h1>

<div class="row">
    <div class="col-md-3">
        <div class="card">
            <div class="card-body">
                <form asp-action="AddClient">
                    <div class="mt-3 d-flex flex-column">
                        <label for="">Nombre</label>
                        <input type="text" class="form-control" name="Name" required>
                    </div>
                    <div class="mt-3 d-flex flex-column">
                        <label for="">Documento</label>
                        <input type="text" class="form-control" name="Document" required>
                    </div>
                    <div class="mt-3 d-flex flex-column">
                        <label for="">Email</label>
                        <input type="text" class="form-control" name="Email" required>
                    </div>
                    <div class="mt-3 d-flex flex-column">
                        <label for="">Telefono</label>
                        <input type="text" class="form-control" name="Phone">
                    </div>
                    <hr>
                    <button type="submit" class="btn btn-primary w-100">Guardar información</button>
                </form>
            </div>
        </div>

    </div>
    <div class="col-md-9">
        <table class="table">
            <thead>
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>Documento</th>
                <th>Email</th>
                <th>Telefono</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Document</td>
                    <td>@item.Email</td>
                    <td>@item.Phone</td>
                    <td>
                        <a class="btn btn-primary" onclick="editarCliente(@item.Id)">Editar</a>
                    </td>
                    <td>
                        <button class="btn btn-danger"  onclick="confirmarEliminar(@item.Id)">Delete</button>
                    </td>
                    <td>
                        <a class="btn btn-warning"  asp-controller="Loan" asp-action="ByClient" asp-route-id="@item.Id">Prestamos</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>